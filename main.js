(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var s=t.g.document;if(!e&&s&&(s.currentScript&&(e=s.currentScript.src),!e)){var n=s.getElementsByTagName("script");if(n.length)for(var i=n.length-1;i>-1&&(!e||!/^http(s?):/.test(e));)e=n[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();class e{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.onSubmit=this.onSubmit.bind(this),this.onInputChange=this.onInputChange.bind(this)}bindToDOM(){this.container.innerHTML=e.markup;const{selector:t,messagePaimentSelector:s,messageLunaSelector:n,submitSelector:i,inputSelector:r}=e;this.element=this.container.querySelector(t),this.messagePaiment=this.element.querySelector(s),this.messageLuna=this.element.querySelector(n),this.submit=this.element.querySelector(i),this.input=this.element.querySelector(r),this.element.addEventListener("submit",this.onSubmit),this.input.addEventListener("input",this.onInputChange)}onSubmit(t){t.preventDefault();const e=function(t){const e=`${t}`;let s=0,n=!1;for(let t=e.length-1;t>=0;t-=1){let i=parseInt(e.charAt(t),10);n&&(i*=2)>9&&(i-=9),s+=i,n=!n}return s%10==0}(this.input.value);if(this.input.classList.toggle("valid",e),this.input.classList.toggle("invalid",!e),e?this.lunaMessage():this.notlunaMessage(),e){const t=function(t){let e="no-found";const s=String(t);return/^4[0-9]{12}(?:[0-9]{3})?$/.test(s)&&(e="visa"),/^(5[1-5]|222[1-9]|22[3-9]|2[3-6]|27[01]|2720)[0-9]{0,}$/.test(s)&&(e="master"),/^220(0|4)[0-9]{12}$/.test(s)&&(e="mir"),/^65[4-9][0-9]{13}|64[4-9][0-9]{13}|6011[0-9]{12}|(622(?:12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|9[01][0-9]|92[0-5])[0-9]{10})$/.test(s)&&(e="discover"),/^3[47][0-9]{13}$/.test(s)&&(e="amex"),/^3(?:0[0-5]|[68][0-9])[0-9]{11}$/.test(s)&&(e="diners"),e}(this.input.value),e=document.querySelector(`.${t}`);e?e.classList.add("card-active"):this.showMessage()}}onInputChange(){this.input.classList.remove("invalid","valid");const t=document.querySelector(".card-active");t&&t.classList.remove("card-active"),this.hideMessage()}showMessage(){this.messagePaiment.classList.remove("hidden")}hideMessage(){this.messagePaiment.classList.add("hidden")}notlunaMessage(){this.messageLuna.classList.remove("hidden")}lunaMessage(){this.messageLuna.classList.add("hidden")}static get markup(){return'\n <form id="form" class="form-validator-widget"\n <div class="form-group">\n              <input class="form-control" id="card_number" name="card_number" type="text" placeholder="Credit card number" data-original-title="" title="">\n          </div>\n          <div class=\'button-wrapper\'>\n            <button class="submit">Click to Validate</button>\n          </div> \n          <span class="message-paiment hidden">Платежной системы нет в базе</span>\n          <span class="message-luna hidden">Некорректный номер карты</span>\n        \n</form>'}static get selector(){return".form-validator-widget"}static get messagePaimentSelector(){return".message-paiment"}static get messageLunaSelector(){return".message-luna"}static get submitSelector(){return".submit"}static get inputSelector(){return".form-control"}}const s=t.p+"img/visa.png",n=t.p+"img/master.png",i=t.p+"img/amex.png",r=t.p+"img/discover.png",a=t.p+"img/mir.png",c=t.p+"img/diners.png";class o{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t,this.cards=[{class:"visa",title:"Visa",url:s},{class:"master",title:"Mastercard",url:n},{class:"mir",title:"Mir",url:a},{class:"discover",title:"Discover",url:r},{class:"amex",title:"American Express",url:i},{class:"diners",title:"Diners Club",url:c}]}bindToDOM(){this.container.innerHTML=this.markup}get markup(){return`\n        <div class="cards">\n          ${this.cards.map((t=>`\n          <div>\n            <img class="card ${t.class}" src=${t.url} alt="${t.title}">\n          </div>  \n          `)).join("")}\n        </div>\n      `}}class l{constructor(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}bindToDOM(){this.container.innerHTML=l.markup,this.element=this.container.querySelector(l.selector),this.formContainer=this.element.querySelector(l.formSelector),this.cardsContainer=this.element.querySelector(l.cardsSelector);new e(this.formContainer).bindToDOM();new o(this.cardsContainer).bindToDOM()}static get formSelector(){return".form-container"}static get cardsSelector(){return".cards-container"}static get selector(){return".widget"}static get markup(){return"\n        <div class='widget'>\n          <h3>Check your credit card number</h3>\n         \n          <div class='cards-container'></div>\n           <div class='form-container'></div>\n        </div>\n      "}}new l(document.querySelector("#container-widget")).bindToDOM()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,